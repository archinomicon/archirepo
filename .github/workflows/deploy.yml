name: Deploy to GitHub Pages

on:
  # Trigger the workflow every time you push to the `main` branch
  # Using a different branch name? Replace `main` with your branchâ€™s name
  push:
    branches: [main]
    tags:
      - 'v*.*.*-*'
  # Allows you to run this workflow manually from the Actions tab on GitHub.
  workflow_dispatch:

# Allow this job to clone the repo and create a page deployment
permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  generate:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      # Extracts the file name from the pushed tag
      - name: Extract filename
        run: echo "FILENAME=${GITHUB_REF#refs/tags/*-}" >> $GITHUB_ENV
      - name: Install d2
        run: curl -fsSL https://d2lang.com/install.sh | sh -s --
      # Caches playwright without relying on `package.json`.
      # If you want to force a playwright upgrade, delete the cache in the GitHub Actions UI.
      - name: Cache playwright binaries
        id: cache-playwright
        uses: actions/cache@v4
        with:
          path: ~/.cache/ms-playwright
          key: playwright-cache
      # Installs playwright if it's not already cached
      - name: Install playwright
        if: steps.cache-playwright.outputs.cache-hit != 'true'
        run: npx playwright install --with-deps chromium
      # Assumes the diagram is located at the repo's root.
      # Adjust according to your project structure.
      - name: Generate diagram
        run: d2 ${{ env.FILENAME }}.d2 ${{ env.FILENAME }}.png
      # Publishes the PNG under GitHub's Release tab
      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: ${{ env.FILENAME }}.png

  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout your repository using git
        uses: actions/checkout@v4
      - name: Install, build, and upload your site
        uses: withastro/action@v3
        # with:
        # path: . # The root location of your Astro project inside the repository. (optional)
        # node-version: 20 # The specific version of Node that should be used to build your site. Defaults to 20. (optional)
        # package-manager: pnpm@latest # The Node package manager that should be used to install dependencies and build your site. Automatically detected based on your lockfile. (optional)

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
